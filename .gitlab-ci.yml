stages:
  - prebuild
  - build

build:project:x64:
  stage: prebuild
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/node:16
  tags:
    - docker
  script:
    - npm install --omit=dev
    - npm run build
  only:
    - tags
  except:
    - branches
  artifacts:
    paths:
      - dist
      - package-lock.json
      - node_modules
    expire_in: 1 days


build:docker:x64:
  stage: build
  before_script:
    - echo ${CI_REGISTRY_PASSWORD} | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
  after_script:
    - docker logout $CI_REGISTRY
  needs:
    - 'build:project:x64'
  tags:
    - shell
  only:
    - tags
  except:
    - branches
  script:
    - |
      if [[ -z "$CI_COMMIT_TAG" ]]; then
        export CI_APPLICATION_REPOSITORY=${CI_APPLICATION_REPOSITORY:-$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG}
        export CI_APPLICATION_TAG=${CI_APPLICATION_TAG:-$CI_COMMIT_SHA}
      else
        export CI_APPLICATION_REPOSITORY=${CI_APPLICATION_REPOSITORY:-$CI_REGISTRY_IMAGE}
        export CI_APPLICATION_TAG=${CI_APPLICATION_TAG:-$CI_COMMIT_TAG}
      fi
    - docker build -t $CI_APPLICATION_REPOSITORY:$CI_APPLICATION_TAG .
    - docker push  $CI_APPLICATION_REPOSITORY:$CI_APPLICATION_TAG
